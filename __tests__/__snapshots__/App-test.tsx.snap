// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#ecf0f1",
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ecf0f1",
        "display": "flex",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-between",
        "marginTop": 10,
      }
    }
  >
    <View>
      <Text>
        Select an Image!
      </Text>
      <View
        style={
          Object {
            "height": 100,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Pick image
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;

exports[`LoginScreen 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#ecf0f1",
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ecf0f1",
        "display": "flex",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-between",
        "marginTop": 10,
      }
    }
  >
    <View>
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Username"
        rejectResponderTermination={true}
        style={
          Object {
            "borderColor": "black",
            "borderWidth": 1,
            "height": 44,
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
            "width": 200,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Password"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Object {
            "borderColor": "black",
            "borderWidth": 1,
            "height": 44,
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
            "width": 200,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "height": 44,
          "justifyContent": "space-between",
          "marginTop": 120,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Login
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Registration
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;

exports[`RegistrationScreen 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#ecf0f1",
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ecf0f1",
        "display": "flex",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-between",
        "marginTop": 10,
      }
    }
  >
    <View>
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="email"
        rejectResponderTermination={true}
        style={
          Object {
            "borderColor": "black",
            "borderWidth": 1,
            "height": 44,
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
            "width": 200,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Password"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Object {
            "borderColor": "black",
            "borderWidth": 1,
            "height": 44,
            "marginBottom": 10,
            "marginTop": 10,
            "padding": 10,
            "width": 200,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "height": 44,
          "justifyContent": "space-between",
          "marginTop": 120,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Login
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Sign Up
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#eee",
        "flex": 1,
        "flexDirection": "column-reverse",
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "paddingTop": 64,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
            }
          }
        >
          <RCTSafeAreaView
            emulateUnlessSupported={true}
            style={
              Object {
                "backgroundColor": "#ecf0f1",
                "flex": 1,
                "paddingTop": 0,
              }
            }
          >
            <RCTSafeAreaView
              emulateUnlessSupported={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ecf0f1",
                  "display": "flex",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "space-between",
                  "marginTop": 10,
                }
              }
            >
              <View>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  placeholder="Username"
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "borderColor": "black",
                      "borderWidth": 1,
                      "height": 44,
                      "marginBottom": 10,
                      "marginTop": 10,
                      "padding": 10,
                      "width": 200,
                    }
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  placeholder="Password"
                  rejectResponderTermination={true}
                  secureTextEntry={true}
                  style={
                    Object {
                      "borderColor": "black",
                      "borderWidth": 1,
                      "height": 44,
                      "marginBottom": 10,
                      "marginTop": 10,
                      "padding": 10,
                      "width": 200,
                    }
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
              </View>
              <View
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "marginTop": 120,
                  }
                }
              >
                <View
                  accessibilityRole="button"
                  accessibilityStates={Array []}
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                        ]
                      }
                    >
                      Login
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityRole="button"
                  accessibilityStates={Array []}
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                        ]
                      }
                    >
                      Registration
                    </Text>
                  </View>
                </View>
              </View>
            </RCTSafeAreaView>
          </RCTSafeAreaView>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#fff",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottomColor": "#a7a7aa",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "flexDirection": "row",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  accessibilityTraits="header"
                  allowFontScaling={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 0.9)",
                      "fontSize": 17,
                      "fontWeight": "600",
                      "marginHorizontal": 16,
                      "textAlign": "center",
                    }
                  }
                >
                  Login
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
